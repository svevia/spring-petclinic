version: "3.1"

services:
  db-1:
    image: mysql:8.0
    # mapping this port just incase people want to only run the DB as a docker
    # container and run the petclinic app manually.
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_ALLOW_EMPTY_PASSWORD=true

    # Disabling docker profile because for a demo we are only ever using the mysql db.
#    profiles:
#    - mysql
    volumes:
    # initialize the mysql dbs and users for the petclinic app.  The petclinic app
    # itself will handle initializing the database tables and schemas along with
    # initial sample data population.
    - ./WebApplication/src/main/resources/db/mysql/user.sql:/docker-entrypoint-initdb.d/a-init.sql
    # needed so that 'petclinic-app' doesn't start until the DB service is ready  
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 5s
      retries: 30
  log4shell-service:
    container_name: Log4ShellServer
    build:
      context: Log4ShellServer/
      dockerfile: Dockerfile
    ports:
      - 8082:8082
      - 1389:1389

  email-service-dev:
    environment:
      CONTRAST__SERVER__NAME: "AS-ADR-DEV"
      CONTRAST__APPLICATION__NAME: "AS-Email-Service"
      CONTRAST__ASSESS__ENABLE: "true"
      CONTRAST__PROTECT__ENABLE: "true"
      CONTRAST__OBSERVE__ENABLE: "true"
      CONTRAST__SERVER__ENVIRONMENT: "Development"
    build:
      context: ./
      dockerfile: EmailService/Dockerfile
    #ports:
    #  - 8081:8081
  petclinic-app-dev:
    environment:
      CONTRAST__SERVER__NAME: "AS-ADR-DEV"
      CONTRAST__APPLICATION__NAME: "AS-Web-Application"
      CONTRAST__ASSESS__ENABLE: "true"
      CONTRAST__PROTECT__ENABLE: "true"
      CONTRAST__OBSERVE__ENABLE: "true"
      CONTRAST__SERVER__ENVIRONMENT: "Development"
      EMAIL_SERVICE_URL: "http://email-service-dev:8081/registerEmail"
    image: local/petclinic:latest
    container_name: petclinic-app-dev
    build:
      context: ./
      dockerfile: WebApplication/Dockerfile
    depends_on:
      db-1:
        condition: service_healthy

  email-service-prod:
    environment:
      CONTRAST__SERVER__NAME: "AS-ADR-PROD"
      CONTRAST__APPLICATION__NAME: "AS-Email-Service"
      CONTRAST__ASSESS__ENABLE: "true"
      CONTRAST__PROTECT__ENABLE: "true"
      CONTRAST__OBSERVE__ENABLE: "true"
      CONTRAST__SERVER__ENVIRONMENT: "Production"
    build:
      context: ./
      dockerfile: EmailService/Dockerfile
    #ports:
    #  - 9081:8081
  petclinic-app-prod:
    environment:
      CONTRAST__SERVER__NAME: "AS-ADR-PROD"
      CONTRAST__APPLICATION__NAME: "AS-Web-Application"
      CONTRAST__ASSESS__ENABLE: "true"
      CONTRAST__PROTECT__ENABLE: "true"
      CONTRAST__OBSERVE__ENABLE: "true"
      CONTRAST__SERVER__ENVIRONMENT: "Production"
      EMAIL_SERVICE_URL: "http://email-service-prod:8081/registerEmail"
    image: local/petclinic:latest
    container_name: petclinic-app-prod
    build:
      context: ./
      dockerfile: WebApplication/Dockerfile
    depends_on:
      db-1:
        condition: service_healthy


  reverse-proxy:
    image: docker.io/library/nginx
    container_name: "nginx-demo-adr"
    links:
      - petclinic-app-dev
      - petclinic-app-prod
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "10000:10000"

#  postgres:
#    image: postgres:15.3
#    ports:
#      - "5432:5432"
#    environment:
#      - POSTGRES_PASSWORD=petclinic
#      - POSTGRES_USER=petclinic
#      - POSTGRES_DB=petclinic
#    profiles:
#    - postgres
